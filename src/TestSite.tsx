import { useContext } from "react";
import "./TestSite.css";
import appContext from "./Contexts/AppContext";

interface CardProps {
  imageSrc: string;
  text: string;
  title: string;
}

const Card = (props: CardProps) => {
  return (
    <div className="card surface3 rad-shadow">
      <img src={ props.imageSrc } alt="" />
      <h3>{props.title}</h3>
      <p>{props.text}</p>
    </div>
  );
};

const PlaceholderCard = () => {
  return (
    <Card
      imageSrc="https://placehold.co/600x400"
      text="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas at efficitur velit. Vestibulum et molestie lorem. In ac purus placerat, gravida ipsum ac, aliquet sem. Duis leo ipsum, lobortis ac hendrerit eget, fringilla ac eros. Aliquam scelerisque lectus id tortor."
      title="Lorem"
    />);
};

const CardPage = ({ numCards }: { numCards: number }) => {
  const cards: React.FC[] = [];
  for (let i = 0; i < numCards; i++) cards.push(PlaceholderCard);

  return (
    <div className="cardPage">
      {cards.map((Card) => <Card />)}
    </div>
  );
};

const Footer = () => {
  return (
    <footer className="surface4">
      <p>Created by Michael Garrett</p>
      <p>Theme generated by Michael Garrett</p>
    </footer>
  );
};

interface LabeledRadioButtonProps {
  name: string;
  label: string;
  value: string;
  id: string;
  checkedValue: string;
  onChange: React.ChangeEventHandler<HTMLInputElement>;
}

const LabeledRadioButton = ({ label, name, value, id, checkedValue, onChange }: LabeledRadioButtonProps) => {
  return (
    <label>
      {label}
      <input onChange={ onChange } checked={ value === checkedValue } type="radio" name={ name } id={ id } value={ value } />
    </label>
  );
};

const Header = () => {
  const { mode, setMode } = useContext(appContext);

  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {
    switch (e.target.value) {
      case "light": setMode("light"); break;
      case "dark": setMode("dark"); break;
      case "dim": setMode("dim"); break;
    }
  };

  return (
    <div className="header surface1">
      {[ "light", "dark", "dim" ].map((m) => {
        return (
          <LabeledRadioButton
            id={ m }
            checkedValue={ mode }
            label={ m }
            name="mode"
            onChange={ handleChange }
            value={ m }
            key={ m }
          />
        );
      })}
    </div>
  );
};

const TestSite = () => {
  return (
    <div className="surface2">
      <Header />
      <CardPage numCards={ 10 } />
      <Footer />
    </div>
  );
};

export default TestSite;
